// Code generated by mockery v2.14.0. DO NOT EDIT.

package mock

import (
	models "github.com/rdkvx/desafioTecnico/v2/models"
	mock "github.com/stretchr/testify/mock"
)

// IpasswordValidator is an autogenerated mock type for the IpasswordValidator type
type IpasswordValidator struct {
	mock.Mock
}

// ValidatePassword provides a mock function with given fields: bodyRequest
func (_m *IpasswordValidator) ValidatePassword(bodyRequest models.ValidatePassword) []string {
	ret := _m.Called(bodyRequest)

	var r0 []string
	if rf, ok := ret.Get(0).(func(models.ValidatePassword) []string); ok {
		r0 = rf(bodyRequest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

type mockConstructorTestingTNewIpasswordValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewIpasswordValidator creates a new instance of IpasswordValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIpasswordValidator(t mockConstructorTestingTNewIpasswordValidator) *IpasswordValidator {
	mock := &IpasswordValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
